<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zestu.mapper.CommentMapper" >
  <resultMap id="BaseResultMap" type="com.zestu.entity.Comment" >
    <id column="cno" property="cno" jdbcType="INTEGER" />
    <result column="cdate" property="cdate" jdbcType="TIMESTAMP" />
    <result column="ccontent" property="ccontent" jdbcType="VARCHAR" />
    <result column="cuid" property="cuid" jdbcType="INTEGER" />
    <result column="caid" property="caid" jdbcType="INTEGER" />
    <result column="ccounts" property="ccounts" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    cno, cdate, ccontent, cuid, caid, ccounts
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zestu.entity.CommentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from comment
    where cno = #{cno,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from comment
    where cno = #{cno,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zestu.entity.CommentExample" >
    delete from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zestu.entity.Comment" >
    insert into comment (cno, cdate, ccontent, 
      cuid, caid, ccounts
      )
    values (#{cno,jdbcType=INTEGER}, #{cdate,jdbcType=TIMESTAMP}, #{ccontent,jdbcType=VARCHAR}, 
      #{cuid,jdbcType=INTEGER}, #{caid,jdbcType=INTEGER}, #{ccounts,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zestu.entity.Comment" >
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="cno != null" >
        cno,
      </if>
      <if test="cdate != null" >
        cdate,
      </if>
      <if test="ccontent != null" >
        ccontent,
      </if>
      <if test="cuid != null" >
        cuid,
      </if>
      <if test="caid != null" >
        caid,
      </if>
      <if test="ccounts != null" >
        ccounts,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="cno != null" >
        #{cno,jdbcType=INTEGER},
      </if>
      <if test="cdate != null" >
        #{cdate,jdbcType=TIMESTAMP},
      </if>
      <if test="ccontent != null" >
        #{ccontent,jdbcType=VARCHAR},
      </if>
      <if test="cuid != null" >
        #{cuid,jdbcType=INTEGER},
      </if>
      <if test="caid != null" >
        #{caid,jdbcType=INTEGER},
      </if>
      <if test="ccounts != null" >
        #{ccounts,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zestu.entity.CommentExample" resultType="java.lang.Integer" >
    select count(*) from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update comment
    <set >
      <if test="record.cno != null" >
        cno = #{record.cno,jdbcType=INTEGER},
      </if>
      <if test="record.cdate != null" >
        cdate = #{record.cdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ccontent != null" >
        ccontent = #{record.ccontent,jdbcType=VARCHAR},
      </if>
      <if test="record.cuid != null" >
        cuid = #{record.cuid,jdbcType=INTEGER},
      </if>
      <if test="record.caid != null" >
        caid = #{record.caid,jdbcType=INTEGER},
      </if>
      <if test="record.ccounts != null" >
        ccounts = #{record.ccounts,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update comment
    set cno = #{record.cno,jdbcType=INTEGER},
      cdate = #{record.cdate,jdbcType=TIMESTAMP},
      ccontent = #{record.ccontent,jdbcType=VARCHAR},
      cuid = #{record.cuid,jdbcType=INTEGER},
      caid = #{record.caid,jdbcType=INTEGER},
      ccounts = #{record.ccounts,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zestu.entity.Comment" >
    update comment
    <set >
      <if test="cdate != null" >
        cdate = #{cdate,jdbcType=TIMESTAMP},
      </if>
      <if test="ccontent != null" >
        ccontent = #{ccontent,jdbcType=VARCHAR},
      </if>
      <if test="cuid != null" >
        cuid = #{cuid,jdbcType=INTEGER},
      </if>
      <if test="caid != null" >
        caid = #{caid,jdbcType=INTEGER},
      </if>
      <if test="ccounts != null" >
        ccounts = #{ccounts,jdbcType=INTEGER},
      </if>
    </set>
    where cno = #{cno,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zestu.entity.Comment" >
    update comment
    set cdate = #{cdate,jdbcType=TIMESTAMP},
      ccontent = #{ccontent,jdbcType=VARCHAR},
      cuid = #{cuid,jdbcType=INTEGER},
      caid = #{caid,jdbcType=INTEGER},
      ccounts = #{ccounts,jdbcType=INTEGER}
    where cno = #{cno,jdbcType=INTEGER}
  </update>
</mapper>